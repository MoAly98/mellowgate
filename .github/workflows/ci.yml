name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  lint:
    name: Code Quality (Linting)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.40.0
        cache: true

    - name: Install dependencies with pixi
      run: |
        pixi install

    - name: Check code formatting with Black
      run: |
        echo "Checking Python code formatting with Black..."
        pixi run black --check --diff src/ example.py
        if [ $? -ne 0 ]; then
          echo "❌ Code formatting issues found. Run 'pixi run black src/ example.py' to fix."
          exit 1
        else
          echo "✅ Code formatting is correct."
        fi

    - name: Check import sorting with isort
      run: |
        echo "Checking import sorting with isort..."
        pixi run isort --check-only --diff src/ example.py
        if [ $? -ne 0 ]; then
          echo "❌ Import sorting issues found. Run 'pixi run isort src/ example.py' to fix."
          exit 1
        else
          echo "✅ Import sorting is correct."
        fi

    - name: Lint with flake8
      run: |
        echo "Linting Python code with flake8..."
        pixi run flake8 src/ example.py
        if [ $? -ne 0 ]; then
          echo "❌ Linting issues found. Check the output above for details."
          exit 1
        else
          echo "✅ No linting issues found."
        fi

  # Type checking job (disabled by default)
  # Uncomment when ready for type checking
  # type-check:
  #   name: Type Checking
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #
  #   - name: Set up Python
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: "3.11"
  #
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install mypy types-requests
  #       pip install -e .
  #
  #   - name: Type check with MyPy
  #     run: |
  #       echo "Type checking with MyPy..."
  #       mypy src/mellowgate/
  #       if [ $? -ne 0 ]; then
  #         echo "❌ Type checking issues found."
  #         exit 1
  #       else
  #         echo "✅ Type checking passed."
  #       fi

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup pixi
      uses: prefix-dev/setup-pixi@v0.8.1
      with:
        pixi-version: v0.40.0
        cache: true

    - name: Install dependencies with pixi
      run: |
        pixi install

    - name: Run unit tests with pytest
      run: |
        echo "Running unit tests with pytest..."
        pixi run pytest tests/ -v --cov=mellowgate --cov-report=term-missing --cov-report=xml
        if [ $? -ne 0 ]; then
          echo "❌ Unit tests failed."
          exit 1
        else
          echo "✅ Unit tests passed."
        fi

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
